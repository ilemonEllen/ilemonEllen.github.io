<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>分享 on FreedomCamp</title>
    <link>https://ilemonellen.github.io/categories/%E5%88%86%E4%BA%AB/</link>
    <description>Recent content in 分享 on FreedomCamp</description>
    <image>
      <url>https://ilemonellen.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://ilemonellen.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 20 Jul 2021 18:16:22 +0900</lastBuildDate><atom:link href="https://ilemonellen.github.io/categories/%E5%88%86%E4%BA%AB/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>除了自建博客你还有这些选择</title>
      <link>https://ilemonellen.github.io/post/writing-platforms/</link>
      <pubDate>Tue, 20 Jul 2021 18:16:22 +0900</pubDate>
      
      <guid>https://ilemonellen.github.io/post/writing-platforms/</guid>
      <description>除了搭建博客之外，你还可以选择以下这些平台来进行你的写作。
Blogger Blogger是目前全球使用者数量最多的个人网志服务提供商，目前是Google旗下的一项服务，完全免费使用
优点 1.Blogger提供免费主机Blogspot.com存放部落格，使用者不必写任何代码或者安装伺服器软体或指令码。
2.所见即所得的写作方式，用户可以轻松地建立、发布、维护和修改自己的网志。
3.使用者可以自行设计部落格介面，其模板支援使用HTML和CSS进行编辑。
4.当前Blogger已经推出了完整的中文介面，具有成熟的中文部落格书写和发布功能。
不足 Blogger的后缀域名.blogspot.com被GFW阻断，大陆地区用户无法正常使用和访问
GitHub GitHub是现在最流行的代码托管网站，用户可以建立自己的仓库存储自己的东西，使用者可以利用仓库的README页面或者是issues来写自己的内容。
优点 1.界面美观，功能强大，能够很好的支持Markdown语法。
2.用户可以利用仓库很方便的管理自己的内容。
不足 对于非编程人员来说需要一定的时间来熟悉GitHub的使用方法
Mastodon Mastodon是一个免费开源的去中心化的分布式微博客社交网络，由于Mastodon是一个去中心化的社区，所以我这里推荐的Mastodon的长毛象中文社区。
优点 1.整个社交网络是开源免费的，使用者可以完全免费使用。
2.社区互动方式友好，上手简单。
3.可以搭建自己的社区。
不足 1.Mastodon更像是一个社交的网络平台，而非一个个人的写作平台
2.文章有500字符的限制，不适合“长篇大论”。
3.部分社区域名需要具备自由上网能力。
telegraph Telegraph是即时聊天软件Telegram的开发商推出的一个内容发布网站
优点 1.它允许用户匿名发布文章。
2.telegraph还能帮助用户创建丰富的内容，同时集成照片以及各类可嵌入的流媒体内容。
3.很好的支持了主流的Markdown书写方法。
4.简单易上手，傻瓜式操作。
不足 大陆地区无法正常使用和访问
Sigle Sigle是一个基于区块链技术的去中心化的博客项目，且开源免费。
优点 1.基于区块链技术，去中心化。
2.别人无法删除你的文章，除非他获得了你的私钥。
3.容易上手写作，免费开源使用。
不足 1.刚接触的使用者可能需要了解相关的知识，例如区块链技术，私钥等。
2.私钥是用户的唯一凭证，失去或者忘记了自己的私钥，那么你就会失去对该博客的控制权。
WriteFreely WriteFreely是免费的开放源代码软件，可用于在Web上构建写作空间，提供简洁无干扰的书写环境。你可以发表公开或私有的作品，与其他 WriteFreely 和联邦宇宙社区联系。
优点 1.界面友好，没有过多的干扰元素，能让使用者专注于内容写作。
2.作者可以从一个帐户无缝创建多个博客，以实现不同的笔名或目的，而无需公开透露其关联。
3.可以搭建属于自己的社区。
不足 需要一定的时间来了解其运作的方式
TypeDream 一个搭建网站的 Nocode 工具，编辑器界面几乎和 Notion 一摸一样。
优点 1.只需要掌握简单的Markdown语法就可以开始写作
2.界面美观，个人使用可以选择免费计划
不足 1.使用者需要付费才能自定义域名。
2.网站为纯英文，提高了使用者的门槛。
gitbook GitBook 可以将您的内容作为网站（可定制和可扩展）或电子书（PDF，ePub或Mobi）输出,使用 GitBook 格式创建和托管图书的在线平台。它提供托管，协作功能和易于使用的编辑器。</description>
    </item>
    
    <item>
      <title>我浏览器中那些不可或缺的扩展</title>
      <link>https://ilemonellen.github.io/post/1/</link>
      <pubDate>Fri, 16 Jul 2021 10:49:24 +0900</pubDate>
      
      <guid>https://ilemonellen.github.io/post/1/</guid>
      <description>我其实自己早在GitHub上的文章中就有写到插件对于浏览器的重要性，合理的使用一些插件能让你的浏览器如虎添翼。在这里我也打算说说自己浏览器中那些不可或缺的插件神器，到时候有人再问我使用的什么插件的时候，我就直接把这个博客给他看。
 ADguard 这是一个广告过滤插件，能够帮你过滤掉网站上你不想看到的广告，当然，也可以完美过滤YouTube视频中的广告（本人亲测有效）。广告过滤插件那么多，有这一个就够了。
Dark Reader 这是一个“护眼插件”，通过这个插件你可以轻松的将大部分网页渲染成黑色，以此来达到降低夜间白色背景光对眼睛的刺激。
bitwarden 这是一款开源的密码管理软件。开源的密码软件不在少数，但是这个上手就比较简单。
privacy Badger 这是一个自动学习并且能够阻止网页上不可见追踪器的插件。
Randrom User-Agent 自动随机的改变用户的浏览器头部信息，减少被刻画用户画像的风险。
Pocket 将自己想要稍后阅读或者是自己喜欢的文章，网页收藏起来。算是一个收集箱。
PopupOFF 阻止顽固的网页弹窗和多余的页面边缘元素，提升阅读和浏览体验。
Clearurls 一款开源插件，去除url中的跟踪元素，保护个人隐私。
Tampermonkey 浏览器中功能最强大的插件，能够配合**Greasy fork**这个脚本网站实现各种各样的功能。
Disconnet 能够提升网页的响应速度，阻止网页追踪器，保护上网安全。
IDM 这是一个多线程的下载插件（需要付费），能够自动嗅探资源，断点恢复下载，多线程 高速下载，下载大文件用它就对了。
WebRTC Leak Prevent 禁用自己浏览器上的webRTC，保护自己的真实IP不泄露。
https://ip.voidsec.com/ 一个用来检测webRTC有没有泄露你真实IP的网站，没有泄露则webRTC处没有IP显示。 网站管理员可以轻易地通过WebRTC看到用户的真实IP地址，即使用户使用VPN来隐藏自己的IP，也可以被追踪到。
解决方法： Mozilla Firefox：在地址栏输入 “about:config”，搜“media.peerconnection.enabled” 并双击将值改为 “false”，WebRTC 将被关闭。
Google Chrome：在谷歌应用商店安装谷歌官方扩展 “WebRTC Leak Prevent”，在插件选项里找到 “IP handling policy:” 选择第三项 “Disable non-proxied UDP”，并点击下方 “Apply settings”。只要是采用chromium内核的浏览器都可以使用此方法。
扩展和插件区别 其实有很长一段时间我自己也将插件和扩展混为一谈，但其实两者是两个完全不同的概念。
插件(plugins)：　在功能上，插件通常是用来渲染页面里的 或 标签。 插件通常用操作系统的本地代码（也叫“原生代码”）编写，可以调用操作系统的 API。 形式上，插件以动态库（Windows 上就是 DLL 文件）的方式，加载到浏览器的进程内。由于使用本地代码编写， 插件通常依赖于特定的操作系统（不同系统的插件不能混用）。</description>
    </item>
    
  </channel>
</rss>
